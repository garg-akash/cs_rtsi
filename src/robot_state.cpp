/*
Author: Elite_akashgarg
CreateDate: 2022-11-09
LastEdited: 2022-11-22
Description: handles robot state parameters
*/
#include <cs_rtsi/robot_state.h>
#include <unordered_map>

std::unordered_map<std::string, rtsi_type_variant_> RobotState::state_types_ {
	{ "payload_cog", std::vector<double>() },
  { "payload_mass", double() },
  { "script_control_line", uint32_t() },
	{ "timestamp", double() },
  { "target_joint_positions", std::vector<double>() },
  { "target_joint_speeds", std::vector<double>() },
  { "actual_joint_torques", std::vector<double>() },
  { "actual_joint_positions", std::vector<double>() },
  { "actual_joint_speeds", std::vector<double>() },
  { "actual_joint_current", std::vector<double>() },
  { "actual_joint_positions", std::vector<double>() },
	{ "actual_TCP_pose", std::vector<double>() },
	{ "actual_TCP_speed", std::vector<double>() },
	{ "target_TCP_pose", std::vector<double>() },
	{ "target_TCP_speed", std::vector<double>() },
	{ "actual_digital_input_bits", std::uint32_t() },
	{ "joint_temperatures", std::vector<double>() },
	{ "robot_mode", std::int32_t() },
	{ "joint_mode", std::vector<int32_t>() },
	{ "safety_mode", std::int32_t() },
	{ "safety_status", std::int32_t() },
	{ "speed_scaling", double() },
	{ "target_speed_fraction", double() },
	{ "actual_robot_voltage", double() },
	{ "actual_robot_current", double() },
  { "actual_joint_voltage", std::vector<double>() },
	{ "actual_digital_output_bits", std::uint32_t() },
	{ "runtime_state", std::uint32_t() },
	{ "elbow_position", std::vector<double>() },
	{ "robot_status_bits", std::uint32_t() },
	{ "safety_status_bits", std::uint32_t() },
	{ "analog_io_types", std::uint32_t() },
  { "standard_analog_input0", double() },
  { "standard_analog_input1", double() },
  { "standard_analog_output0", double() },
  { "standard_analog_output1", double() },
  { "io_current", double() },
  { "tool_mode", uint32_t() },
  { "tool_analog_input_types", uint32_t() },
  { "tool_analog_output_types", uint32_t() },
  { "tool_analog_input", double() },
  { "tool_analog_output", double() },
  { "tool_output_voltage", double() },
  { "tool_output_current", double() },
  { "tool_temperature", double() },
  { "output_bit_registers0_to_31", uint32_t() },
  { "output_bit_registers32_to_63", uint32_t() },
  { "tool_digital_mode", uint8_t() },
  { "tool_digital0_mode", uint8_t() },
  { "tool_digital1_mode", uint8_t() },
  { "tool_digital2_mode", uint8_t() },
  { "tool_digital3_mode", uint8_t() },
  { "input_bit_registers0_to_31", std::uint32_t() },
  { "input_bit_registers32_to_63", std::uint32_t() },
  { "output_bit_register64", bool() },
  { "output_bit_register65", bool() },
  { "output_bit_register66", bool() },
  { "output_bit_register67", bool() },
  { "output_bit_register68", bool() },
  { "output_bit_register69", bool() },
  { "output_bit_register70", bool() },
  { "output_bit_register71", bool() },
  { "output_bit_register72", bool() },
  { "output_bit_register73", bool() },
  { "output_bit_register74", bool() },
  { "output_bit_register75", bool() },
  { "output_bit_register76", bool() },
  { "output_bit_register77", bool() },
  { "output_bit_register78", bool() },
  { "output_bit_register79", bool() },
  { "output_bit_register80", bool() },
  { "output_bit_register81", bool() },
  { "output_bit_register82", bool() },
  { "output_bit_register83", bool() },
  { "output_bit_register84", bool() },
  { "output_bit_register85", bool() },
  { "output_bit_register86", bool() },
  { "output_bit_register87", bool() },
  { "output_bit_register88", bool() },
  { "output_bit_register89", bool() },
  { "output_bit_register90", bool() },
  { "output_bit_register91", bool() },
  { "output_bit_register92", bool() },
  { "output_bit_register93", bool() },
  { "output_bit_register94", bool() },
  { "output_bit_register95", bool() },
  { "output_bit_register96", bool() },
  { "output_bit_register97", bool() },
  { "output_bit_register98", bool() },
  { "output_bit_register99", bool() },
  { "output_bit_register100", bool() },
  { "output_bit_register101", bool() },
  { "output_bit_register102", bool() },
  { "output_bit_register103", bool() },
  { "output_bit_register104", bool() },
  { "output_bit_register105", bool() },
  { "output_bit_register106", bool() },
  { "output_bit_register107", bool() },
  { "output_bit_register108", bool() },
  { "output_bit_register109", bool() },
  { "output_bit_register110", bool() },
  { "output_bit_register111", bool() },
  { "output_bit_register112", bool() },
  { "output_bit_register113", bool() },
  { "output_bit_register114", bool() },
  { "output_bit_register115", bool() },
  { "output_bit_register116", bool() },
  { "output_bit_register117", bool() },
  { "output_bit_register118", bool() },
  { "output_bit_register119", bool() },
  { "output_bit_register120", bool() },
  { "output_bit_register121", bool() },
  { "output_bit_register122", bool() },
  { "output_bit_register123", bool() },
  { "output_bit_register124", bool() },
  { "output_bit_register125", bool() },
  { "output_bit_register126", bool() },
  { "output_bit_register127", bool() },
  { "output_int_register0", int32_t() },
  { "output_int_register1", int32_t() },
  { "output_int_register2", int32_t() },
  { "output_int_register3", int32_t() },
  { "output_int_register4", int32_t() },
  { "output_int_register5", int32_t() },
  { "output_int_register6", int32_t() },
  { "output_int_register7", int32_t() },
  { "output_int_register8", int32_t() },
  { "output_int_register9", int32_t() },
  { "output_int_register10", int32_t() },
  { "output_int_register11", int32_t() },
  { "output_int_register12", int32_t() },
  { "output_int_register13", int32_t() },
  { "output_int_register14", int32_t() },
  { "output_int_register15", int32_t() },
  { "output_int_register16", int32_t() },
  { "output_int_register17", int32_t() },
  { "output_int_register18", int32_t() },
  { "output_int_register19", int32_t() },
  { "output_int_register20", int32_t() },
  { "output_int_register21", int32_t() },
  { "output_int_register22", int32_t() },
  { "output_int_register23", int32_t() },
  { "output_int_register24", int32_t() },
  { "output_int_register25", int32_t() },
  { "output_int_register26", int32_t() },
  { "output_int_register27", int32_t() },
  { "output_int_register28", int32_t() },
  { "output_int_register29", int32_t() },
  { "output_int_register30", int32_t() },
  { "output_int_register31", int32_t() },
  { "output_int_register32", int32_t() },
  { "output_int_register33", int32_t() },
  { "output_int_register34", int32_t() },
  { "output_int_register35", int32_t() },
  { "output_int_register36", int32_t() },
  { "output_int_register37", int32_t() },
  { "output_int_register38", int32_t() },
  { "output_int_register39", int32_t() },
  { "output_int_register40", int32_t() },
  { "output_int_register41", int32_t() },
  { "output_int_register42", int32_t() },
  { "output_int_register43", int32_t() },
  { "output_int_register44", int32_t() },
  { "output_int_register45", int32_t() },
  { "output_int_register46", int32_t() },
  { "output_int_register47", int32_t() },
  { "output_double_register0", double() },
  { "output_double_register1", double() },
  { "output_double_register2", double() },
  { "output_double_register3", double() },
  { "output_double_register4", double() },
  { "output_double_register5", double() },
  { "output_double_register6", double() },
  { "output_double_register7", double() },
  { "output_double_register8", double() },
  { "output_double_register9", double() },
  { "output_double_register10", double() },
  { "output_double_register11", double() },
  { "output_double_register12", double() },
  { "output_double_register13", double() },
  { "output_double_register14", double() },
  { "output_double_register15", double() },
  { "output_double_register16", double() },
  { "output_double_register17", double() },
  { "output_double_register18", double() },
  { "output_double_register19", double() },
  { "output_double_register20", double() },
  { "output_double_register21", double() },
  { "output_double_register22", double() },
  { "output_double_register23", double() },
  { "output_double_register24", double() },
  { "output_double_register25", double() },
  { "output_double_register26", double() },
  { "output_double_register27", double() },
  { "output_double_register28", double() },
  { "output_double_register29", double() },
  { "output_double_register30", double() },
  { "output_double_register31", double() },
  { "output_double_register32", double() },
  { "output_double_register33", double() },
  { "output_double_register34", double() },
  { "output_double_register35", double() },
  { "output_double_register36", double() },
  { "output_double_register37", double() },
  { "output_double_register38", double() },
  { "output_double_register39", double() },
  { "output_double_register40", double() },
  { "output_double_register41", double() },
  { "output_double_register42", double() },
  { "output_double_register43", double() },
  { "output_double_register44", double() },
  { "output_double_register45", double() },
  { "output_double_register46", double() },
  { "output_double_register47", double() },
  { "input_bit_register64", bool() },
  { "input_bit_register65", bool() },
  { "input_bit_register66", bool() },
  { "input_bit_register67", bool() },
  { "input_bit_register68", bool() },
  { "input_bit_register69", bool() },
  { "input_bit_register70", bool() },
  { "input_bit_register71", bool() },
  { "input_bit_register72", bool() },
  { "input_bit_register73", bool() },
  { "input_bit_register74", bool() },
  { "input_bit_register75", bool() },
  { "input_bit_register76", bool() },
  { "input_bit_register77", bool() },
  { "input_bit_register78", bool() },
  { "input_bit_register79", bool() },
  { "input_bit_register80", bool() },
  { "input_bit_register81", bool() },
  { "input_bit_register82", bool() },
  { "input_bit_register83", bool() },
  { "input_bit_register84", bool() },
  { "input_bit_register85", bool() },
  { "input_bit_register86", bool() },
  { "input_bit_register87", bool() },
  { "input_bit_register88", bool() },
  { "input_bit_register89", bool() },
  { "input_bit_register90", bool() },
  { "input_bit_register91", bool() },
  { "input_bit_register92", bool() },
  { "input_bit_register93", bool() },
  { "input_bit_register94", bool() },
  { "input_bit_register95", bool() },
  { "input_bit_register96", bool() },
  { "input_bit_register97", bool() },
  { "input_bit_register98", bool() },
  { "input_bit_register99", bool() },
  { "input_bit_register100", bool() },
  { "input_bit_register101", bool() },
  { "input_bit_register102", bool() },
  { "input_bit_register103", bool() },
  { "input_bit_register104", bool() },
  { "input_bit_register105", bool() },
  { "input_bit_register106", bool() },
  { "input_bit_register107", bool() },
  { "input_bit_register108", bool() },
  { "input_bit_register109", bool() },
  { "input_bit_register110", bool() },
  { "input_bit_register111", bool() },
  { "input_bit_register112", bool() },
  { "input_bit_register113", bool() },
  { "input_bit_register114", bool() },
  { "input_bit_register115", bool() },
  { "input_bit_register116", bool() },
  { "input_bit_register117", bool() },
  { "input_bit_register118", bool() },
  { "input_bit_register119", bool() },
  { "input_bit_register120", bool() },
  { "input_bit_register121", bool() },
  { "input_bit_register122", bool() },
  { "input_bit_register123", bool() },
  { "input_bit_register124", bool() },
  { "input_bit_register125", bool() },
  { "input_bit_register126", bool() },
  { "input_bit_register127", bool() },
  { "input_int_register0", int32_t() },
  { "input_int_register1", int32_t() },
  { "input_int_register2", int32_t() },
  { "input_int_register3", int32_t() },
  { "input_int_register4", int32_t() },
  { "input_int_register5", int32_t() },
  { "input_int_register6", int32_t() },
  { "input_int_register7", int32_t() },
  { "input_int_register8", int32_t() },
  { "input_int_register9", int32_t() },
  { "input_int_register10", int32_t() },
  { "input_int_register11", int32_t() },
  { "input_int_register12", int32_t() },
  { "input_int_register13", int32_t() },
  { "input_int_register14", int32_t() },
  { "input_int_register15", int32_t() },
  { "input_int_register16", int32_t() },
  { "input_int_register17", int32_t() },
  { "input_int_register18", int32_t() },
  { "input_int_register19", int32_t() },
  { "input_int_register20", int32_t() },
  { "input_int_register21", int32_t() },
  { "input_int_register22", int32_t() },
  { "input_int_register23", int32_t() },
  { "input_int_register24", int32_t() },
  { "input_int_register25", int32_t() },
  { "input_int_register26", int32_t() },
  { "input_int_register27", int32_t() },
  { "input_int_register28", int32_t() },
  { "input_int_register29", int32_t() },
  { "input_int_register30", int32_t() },
  { "input_int_register31", int32_t() },
  { "input_int_register32", int32_t() },
  { "input_int_register33", int32_t() },
  { "input_int_register34", int32_t() },
  { "input_int_register35", int32_t() },
  { "input_int_register36", int32_t() },
  { "input_int_register37", int32_t() },
  { "input_int_register38", int32_t() },
  { "input_int_register39", int32_t() },
  { "input_int_register40", int32_t() },
  { "input_int_register41", int32_t() },
  { "input_int_register42", int32_t() },
  { "input_int_register43", int32_t() },
  { "input_int_register44", int32_t() },
  { "input_int_register45", int32_t() },
  { "input_int_register46", int32_t() },
  { "input_int_register47", int32_t() },
  { "input_double_register0", double() },
  { "input_double_register1", double() },
  { "input_double_register2", double() },
  { "input_double_register3", double() },
  { "input_double_register4", double() },
  { "input_double_register5", double() },
  { "input_double_register6", double() },
  { "input_double_register7", double() },
  { "input_double_register8", double() },
  { "input_double_register9", double() },
  { "input_double_register10", double() },
  { "input_double_register11", double() },
  { "input_double_register12", double() },
  { "input_double_register13", double() },
  { "input_double_register14", double() },
  { "input_double_register15", double() },
  { "input_double_register16", double() },
  { "input_double_register17", double() },
  { "input_double_register18", double() },
  { "input_double_register19", double() },
  { "input_double_register20", double() },
  { "input_double_register21", double() },
  { "input_double_register22", double() },
  { "input_double_register23", double() },
  { "input_double_register24", double() },
  { "input_double_register25", double() },
  { "input_double_register26", double() },
  { "input_double_register27", double() },
  { "input_double_register28", double() },
  { "input_double_register29", double() },
  { "input_double_register30", double() },
  { "input_double_register31", double() },
  { "input_double_register32", double() },
  { "input_double_register33", double() },
  { "input_double_register34", double() },
  { "input_double_register35", double() },
  { "input_double_register36", double() },
  { "input_double_register37", double() },
  { "input_double_register38", double() },
  { "input_double_register39", double() },
  { "input_double_register40", double() },
  { "input_double_register41", double() },
  { "input_double_register42", double() },
  { "input_double_register43", double() },
  { "input_double_register44", double() },
  { "input_double_register45", double() },
  { "input_double_register46", double() },
  { "input_double_register47", double() }
};

RobotState::RobotState(const std::vector<std::string> &variables)
{
  initRobotState(variables);
}

RobotState::~RobotState() = default;

bool RobotState::lockUpdateStateMutex()
{
  update_state_mutex_.lock();
  return true;
}

bool RobotState::unlockUpdateStateMutex()
{
  update_state_mutex_.unlock();
  return true;
}

void RobotState::setFirstStateReceived(bool val)
{
  first_state_received_ = val;
}

bool RobotState::getFirstStateReceived()
{
  return first_state_received_;
}

void RobotState::initRobotState(const std::vector<std::string> &variables)
{
	std::lock_guard<std::mutex> lock(update_state_mutex_);
	for (auto& item : variables)
	{
  	if (state_types_.find(item) != state_types_.end())
  	{
  		rtsi_type_variant_ entry = state_types_[item];
  		state_data_[item] = entry;
  	}
	}
	first_state_received_ = false;
}